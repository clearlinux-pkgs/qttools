Antti Kokko (2):
      Add changes file for Qt 5.15.2
      Add changes file for Qt 5.12.10

Edward Welbourne (1):
      Clear out deprecated QLocale::Language values

Friedemann Kleint (1):
      Bump copyright year to 2021

Jani Heikkinen (2):
      Bump version
      Bump version

JiDe Zhang (1):
      QDoc: Fix possible crash in WebXMLGenerator

Kai Koehne (4):
      qt5_create_translation: Fix handling of directory dependencies
      CMake: Fix usage of qt_create_translation in a CTest
      Doc: Document attribution argument
      CMake: Fix handling of -extensions argument

Kai KÃ¶hne (2):
      Fix redeclared variable name
      Fix check for malformed input when decoding translations

Kai Pastor (1):
      Clamp registered collection time-stamp to SOURCE_DATE_EPOCH if set

Li Xinwei (1):
      Fix qdbusviewer.exe missing version and copyright information

Ralf Habacker (2):
      qtpaths: Add missing location types
      Replace prefined application name by a generic name

Tarja Sundqvist (3):
      Update commercial license headers
      Revert "Update commercial license headers"
      Merge remote-tracking branch 'origin/tqtc/lts-5.15.4' into tqtc/lts-5.15-opensource

Topi Reinio (11):
      qdoc: Avoid duplicates in \sincelist
      qdoc: Handle JSON as plain text
      qdoc: DocBook generator: Fix \headerfile generation
      qdoc: Skip ignored entries in .qhp
      qdoc: Avoid excess warnings for undocumented namespaces
      qdoc: Fix breadcrumb generation for normal page nodes
      qdoc: Ignore empty example meta tags
      qdoc: Fix addendums for QML signals that contain '.' in the name
      qdoc: Fix generation of TOC for basic QML/JS types
      qdoc: Don't clear the warning count in single-exec mode
      qdoc: Allow any type of page as qhp indexTitle

diff --git a/dist/changes-5.12.10 b/dist/changes-5.12.10
new file mode 100644
index 000000000..95c6a0b2f
--- /dev/null
+++ b/dist/changes-5.12.10
@@ -0,0 +1,26 @@
+Qt 5.12.10 is a bug-fix release. It maintains both forward and backward
+compatibility (source and binary) with Qt 5.12.9.
+
+For more details, refer to the online documentation included in this
+distribution. The documentation is also available online:
+
+  https://doc.qt.io/qt-5.12/index.html
+
+The Qt version 5.12 series is binary compatible with the 5.11.x series.
+Applications compiled for 5.11 will continue to run with 5.12.
+
+Some of the changes listed in this file include issue tracking numbers
+corresponding to tasks in the Qt Bug Tracker:
+
+  https://bugreports.qt.io/
+
+Each of these identifiers can be entered in the bug tracker to obtain more
+information about a particular change.
+
+****************************************************************************
+*                   Important Behavior Changes                             *
+****************************************************************************
+
+****************************************************************************
+*                          Library                                         *
+****************************************************************************
diff --git a/src/assistant/assistant/mainwindow.cpp b/src/assistant/assistant/mainwindow.cpp
index 1c5de9b85..b09dfc1b5 100644
--- a/src/assistant/assistant/mainwindow.cpp
+++ b/src/assistant/assistant/mainwindow.cpp
@@ -912,7 +912,7 @@ void MainWindow::showAboutDialog()
             "<p>Version %2</p>"
             "<p>Browser: %3</p></center>"
             "<p>Copyright (C) %4 The Qt Company Ltd.</p>")
-            .arg(tr("Qt Assistant"), QLatin1String(QT_VERSION_STR), browser, QStringLiteral("2020")),
+            .arg(tr("Qt Assistant"), QLatin1String(QT_VERSION_STR), browser, QStringLiteral("2021")),
             resources);
         QLatin1String path(":/qt-project.org/assistant/images/assistant-128.png");
         aboutDia.setPixmap(QString(path));
diff --git a/src/assistant/help/qhelpcollectionhandler.cpp b/src/assistant/help/qhelpcollectionhandler.cpp
index 69782d45f..d7b319d19 100644
--- a/src/assistant/help/qhelpcollectionhandler.cpp
+++ b/src/assistant/help/qhelpcollectionhandler.cpp
@@ -2197,7 +2197,15 @@ bool QHelpCollectionHandler::registerIndexTable(const QHelpDBReader::IndexTable
     m_query->addBindValue(fileName);
     const QFileInfo fi(absoluteDocPath(fileName));
     m_query->addBindValue(fi.size());
-    m_query->addBindValue(fi.lastModified().toString(Qt::ISODate));
+    QDateTime lastModified = fi.lastModified();
+    if (qEnvironmentVariableIsSet("SOURCE_DATE_EPOCH")) {
+        const QString sourceDateEpochStr = qEnvironmentVariable("SOURCE_DATE_EPOCH");
+        bool ok;
+        const qlonglong sourceDateEpoch = sourceDateEpochStr.toLongLong(&ok);
+        if (ok && sourceDateEpoch < lastModified.toSecsSinceEpoch())
+            lastModified.setSecsSinceEpoch(sourceDateEpoch);
+    }
+    m_query->addBindValue(lastModified.toString(Qt::ISODate));
     if (!m_query->exec())
         return false;
 
diff --git a/src/designer/src/designer/versiondialog.cpp b/src/designer/src/designer/versiondialog.cpp
index 8e2e399e0..80bc2b6d2 100644
--- a/src/designer/src/designer/versiondialog.cpp
+++ b/src/designer/src/designer/versiondialog.cpp
@@ -160,7 +160,7 @@ VersionDialog::VersionDialog(QWidget *parent)
 
     lbl->setText(tr("%1"
                     "<br/>Copyright (C) %2 The Qt Company Ltd."
-                    ).arg(version, QStringLiteral("2020")));
+                    ).arg(version, QStringLiteral("2021")));
 
     lbl->setWordWrap(true);
     lbl->setOpenExternalLinks(true);
diff --git a/src/linguist/Qt5LinguistToolsMacros.cmake b/src/linguist/Qt5LinguistToolsMacros.cmake
index ab271d56a..20fb14935 100644
--- a/src/linguist/Qt5LinguistToolsMacros.cmake
+++ b/src/linguist/Qt5LinguistToolsMacros.cmake
@@ -41,6 +41,17 @@ function(QT5_CREATE_TRANSLATION _qm_files)
     set(_lupdate_files ${_LUPDATE_UNPARSED_ARGUMENTS})
     set(_lupdate_options ${_LUPDATE_OPTIONS})
 
+    list(FIND _lupdate_options "-extensions" _extensions_index)
+    if(_extensions_index GREATER -1)
+        math(EXPR _extensions_index "${_extensions_index} + 1")
+        list(GET _lupdate_options ${_extensions_index} _extensions_list)
+        string(REPLACE "," ";" _extensions_list "${_extensions_list}")
+        list(TRANSFORM _extensions_list STRIP)
+        list(TRANSFORM _extensions_list REPLACE "^\." "")
+        list(TRANSFORM _extensions_list PREPEND "*.")
+    else()
+        set(_extensions_list "*.java;*.jui;*.ui;*.c;*.c++;*.cc;*.cpp;*.cxx;*.ch;*.h;*.h++;*.hh;*.hpp;*.hxx;*.js;*.qs;*.qml;*.qrc")
+    endif()
     set(_my_sources)
     set(_my_tsfiles)
     foreach(_file ${_lupdate_files})
@@ -59,8 +70,16 @@ function(QT5_CREATE_TRANSLATION _qm_files)
           get_filename_component(_ts_name ${_ts_file} NAME)
           set(_ts_lst_file "${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${_ts_name}_lst_file")
           set(_lst_file_srcs)
+          set(_dependencies)
           foreach(_lst_file_src ${_my_sources})
               set(_lst_file_srcs "${_lst_file_src}\n${_lst_file_srcs}")
+              if(IS_DIRECTORY ${_lst_file_src})
+                  list(TRANSFORM _extensions_list PREPEND "${_lst_file_src}/" OUTPUT_VARIABLE _directory_glob)
+                  file(GLOB_RECURSE _directory_contents CONFIGURE_DEPENDS ${_directory_glob})
+                  list(APPEND _dependencies ${_directory_contents})
+              else()
+                  list(APPEND _dependencies "${_lst_file_src}")
+              endif()
           endforeach()
 
           get_directory_property(_inc_DIRS INCLUDE_DIRECTORIES)
@@ -74,8 +93,8 @@ function(QT5_CREATE_TRANSLATION _qm_files)
         add_custom_command(OUTPUT ${_ts_file}
             COMMAND ${Qt5_LUPDATE_EXECUTABLE}
             ARGS ${_lupdate_options} "@${_ts_lst_file}" -ts ${_ts_file}
-            DEPENDS ${_my_sources}
-            BYPRODUCTS ${_ts_lst_file} VERBATIM)
+            DEPENDS ${_dependencies}
+            VERBATIM)
     endforeach()
     qt5_add_translation(${_qm_files} ${_my_tsfiles})
     set(${_qm_files} ${${_qm_files}} PARENT_SCOPE)
diff --git a/src/linguist/linguist/mainwindow.cpp b/src/linguist/linguist/mainwindow.cpp
index 3f04a68f7..52b8044f6 100644
--- a/src/linguist/linguist/mainwindow.cpp
+++ b/src/linguist/linguist/mainwindow.cpp
@@ -1305,9 +1305,9 @@ void MainWindow::addToPhraseBook()
             return;
     } else {
         bool okPressed = false;
-        QString selectedPhraseBook = QInputDialog::getItem(this, tr("Add to phrase book"),
-                                tr("Select phrase book to add to"),
-                                phraseBookList, 0, false, &okPressed);
+        selectedPhraseBook = QInputDialog::getItem(this, tr("Add to phrase book"),
+                                                   tr("Select phrase book to add to"),
+                                                   phraseBookList, 0, false, &okPressed);
         if (!okPressed)
             return;
     }
@@ -1363,7 +1363,7 @@ void MainWindow::about()
     const QString description
             = tr("Qt Linguist is a tool for adding translations to Qt applications.");
     const QString copyright
-            = tr("Copyright (C) %1 The Qt Company Ltd.").arg(QStringLiteral("2020"));
+            = tr("Copyright (C) %1 The Qt Company Ltd.").arg(QStringLiteral("2021"));
     box.setText(QStringLiteral("<center><img src=\":/images/icons/linguist-128-32.png\"/></img><p>%1</p></center>"
                                "<p>%2</p>"
                                "<p>%3</p>").arg(version, description, copyright));
diff --git a/src/linguist/shared/qm.cpp b/src/linguist/shared/qm.cpp
index 288607824..8c3fc3faf 100644
--- a/src/linguist/shared/qm.cpp
+++ b/src/linguist/shared/qm.cpp
@@ -552,7 +552,7 @@ bool loadQM(Translator &translator, QIODevice &dev, ConversionData &cd)
                 goto end;
             case Tag_Translation: {
                 int len = read32(m);
-                if (len % 1) {
+                if (len & 1) {
                     cd.appendError(QLatin1String("QM-Format error"));
                     return false;
                 }
diff --git a/src/qdbus/qdbusviewer/mainwindow.cpp b/src/qdbus/qdbusviewer/mainwindow.cpp
index 37a2ef783..949663616 100644
--- a/src/qdbus/qdbusviewer/mainwindow.cpp
+++ b/src/qdbus/qdbusviewer/mainwindow.cpp
@@ -90,7 +90,7 @@ void MainWindow::about()
                 "<h3>%1</h3>"
                 "<p>Version %2</p></center>"
                 "<p>Copyright (C) %3 The Qt Company Ltd.</p>")
-            .arg(tr("D-Bus Viewer"), QLatin1String(QT_VERSION_STR), QStringLiteral("2020")));
+            .arg(tr("D-Bus Viewer"), QLatin1String(QT_VERSION_STR), QStringLiteral("2021")));
     box.setWindowTitle(tr("D-Bus Viewer"));
     box.exec();
 }
diff --git a/src/qdbus/qdbusviewer/qdbusviewer.pro b/src/qdbus/qdbusviewer/qdbusviewer.pro
index 02ec7a2d2..07a47cd4c 100644
--- a/src/qdbus/qdbusviewer/qdbusviewer.pro
+++ b/src/qdbus/qdbusviewer/qdbusviewer.pro
@@ -23,7 +23,7 @@ mac {
 }
 
 win32 {
-    RC_FILE = qdbusviewer.rc
+    RC_ICONS = images/qdbusviewer.ico
 }
 
 load(qt_app)
diff --git a/src/qdbus/qdbusviewer/qdbusviewer.rc b/src/qdbus/qdbusviewer/qdbusviewer.rc
deleted file mode 100644
index c4b1d60b8..000000000
--- a/src/qdbus/qdbusviewer/qdbusviewer.rc
+++ /dev/null
@@ -1 +0,0 @@
-IDI_ICON1		ICON		DISCARDABLE	"images/qdbusviewer.ico"
diff --git a/src/qdoc/doc/qdoc-manual-topiccmds.qdoc b/src/qdoc/doc/qdoc-manual-topiccmds.qdoc
index 0837648b7..7d906ce64 100644
--- a/src/qdoc/doc/qdoc-manual-topiccmds.qdoc
+++ b/src/qdoc/doc/qdoc-manual-topiccmds.qdoc
@@ -930,22 +930,24 @@
 
     \list
 
+    \li api - This is the type of page used for C++ class references and
+    QML type references. You should never use this one for the pages
+    you write, because this one is reserved for QDoc.
+
+    \li attribution - A page describing (code) attributions.
+
+    \li example - A page that describes a working example.
+
     \li faq - A frequently asked question.
 
     \li howto - A user guide on how to use some components of the
     software.
 
-    \li example - A page that describes a working example.
-
     \li overview - For text pages that provide an overview of some
     important subject.
 
     \li tutorial - For text pages that are part of a tutorial.
 
-    \li api - This is the type of page used for C++ class references and
-    QML type references. You should never use this one for the pages
-    you write, because this one is reserved for QDoc.
-
     \endlist
 
     The page title is set using the \l {title-command} {\\title}
diff --git a/src/qdoc/docbookgenerator.cpp b/src/qdoc/docbookgenerator.cpp
index 3e4f03cf0..b5acf4d7b 100644
--- a/src/qdoc/docbookgenerator.cpp
+++ b/src/qdoc/docbookgenerator.cpp
@@ -2436,12 +2436,10 @@ void DocBookGenerator::generateCppReferencePage(Node *node)
     QString title;
     QString rawTitle;
     QString fullTitle;
-    const NamespaceNode *ns = nullptr;
     if (aggregate->isNamespace()) {
         rawTitle = aggregate->plainName();
         fullTitle = aggregate->plainFullName();
         title = rawTitle + " Namespace";
-        ns = static_cast<const NamespaceNode *>(aggregate);
     } else if (aggregate->isClass()) {
         rawTitle = aggregate->plainName();
         QString templateDecl = node->templateDecl();
@@ -2449,6 +2447,8 @@ void DocBookGenerator::generateCppReferencePage(Node *node)
             fullTitle = QString("%1 %2 ").arg(templateDecl, aggregate->typeWord(false));
         fullTitle += aggregate->plainFullName();
         title = rawTitle + QLatin1Char(' ') + aggregate->typeWord(true);
+    } else if (aggregate->isHeader()) {
+        title = fullTitle = rawTitle = aggregate->fullTitle();
     }
 
     QString subtitleText;
@@ -2479,8 +2479,10 @@ void DocBookGenerator::generateCppReferencePage(Node *node)
     }
 
     Sections sections(const_cast<Aggregate *>(aggregate));
-    SectionVector *sectionVector =
-            ns ? &sections.stdDetailsSections() : &sections.stdCppClassDetailsSections();
+    auto *sectionVector =
+            (aggregate->isNamespace() || aggregate->isHeader()) ?
+                    &sections.stdDetailsSections() :
+                    &sections.stdCppClassDetailsSections();
     SectionVector::ConstIterator section = sectionVector->constBegin();
     while (section != sectionVector->constEnd()) {
         bool headerGenerated = false;
@@ -3420,8 +3422,9 @@ void DocBookGenerator::generateAddendum(const Node *node, Addendum type, CodeMar
     case QmlSignalHandler:
     {
         QString handler(node->name());
-        handler[0] = handler[0].toTitleCase();
-        handler.prepend(QLatin1String("on"));
+        int prefixLocation = handler.lastIndexOf('.', -2) + 1;
+        handler[prefixLocation] = handler[prefixLocation].toTitleCase();
+        handler.insert(prefixLocation, QLatin1String("on"));
         writer->writeStartElement(dbNamespace, "para");
         writer->writeCharacters("The corresponding handler is ");
         writer->writeTextElement(dbNamespace, "code", handler);
diff --git a/src/qdoc/generator.cpp b/src/qdoc/generator.cpp
index b3aacb623..e753d3090 100644
--- a/src/qdoc/generator.cpp
+++ b/src/qdoc/generator.cpp
@@ -1387,8 +1387,9 @@ void Generator::generateAddendum(const Node *node, Addendum type, CodeMarker *ma
     case QmlSignalHandler:
     {
         QString handler(node->name());
-        handler[0] = handler[0].toTitleCase();
-        handler.prepend(QLatin1String("on"));
+        int prefixLocation = handler.lastIndexOf('.', -2) + 1;
+        handler[prefixLocation] = handler[prefixLocation].toTitleCase();
+        handler.insert(prefixLocation, QLatin1String("on"));
         text << "The corresponding handler is "
              << Atom(Atom::FormattingLeft, ATOM_FORMATTING_TELETYPE) << handler
              << Atom(Atom::FormattingRight, ATOM_FORMATTING_TELETYPE) << ".";
diff --git a/src/qdoc/helpprojectwriter.cpp b/src/qdoc/helpprojectwriter.cpp
index d411802dc..37d048b7a 100644
--- a/src/qdoc/helpprojectwriter.cpp
+++ b/src/qdoc/helpprojectwriter.cpp
@@ -234,7 +234,7 @@ bool HelpProjectWriter::generateSection(HelpProject &project, QXmlStreamWriter &
     if (!node->url().isEmpty() && !(project.includeIndexNodes && !node->url().startsWith("http")))
         return false;
 
-    if (node->isPrivate() || node->isInternal())
+    if (node->isPrivate() || node->isInternal() || node->isDontDocument())
         return false;
 
     if (node->name().isEmpty())
@@ -657,7 +657,9 @@ void HelpProjectWriter::generateProject(HelpProject &project)
     writer.writeStartElement("toc");
     writer.writeStartElement("section");
     const Node *node = qdb_->findPageNodeByTitle(project.indexTitle);
-    if (node == nullptr)
+    if (!node)
+        node = qdb_->findNodeByNameAndType(QStringList(project.indexTitle), &Node::isPageNode);
+    if (!node)
         node = qdb_->findNodeByNameAndType(QStringList("index.html"), &Node::isPageNode);
     QString indexPath;
     if (node)
diff --git a/src/qdoc/htmlgenerator.cpp b/src/qdoc/htmlgenerator.cpp
index a554f1ac4..aaea6a65f 100644
--- a/src/qdoc/htmlgenerator.cpp
+++ b/src/qdoc/htmlgenerator.cpp
@@ -1286,8 +1286,12 @@ void HtmlGenerator::generateCppReferencePage(Aggregate *aggregate, CodeMarker *m
         QString command = "documentation";
         if (aggregate->isClassNode())
             command = "\'\\class\' comment";
-        aggregate->location().warning(
-                tr("No %1 for '%2'").arg(command).arg(aggregate->plainSignature()));
+        if (!ns || ns->isDocumentedHere()) {
+            aggregate->location().warning(
+                    tr("No %1 for '%2'")
+                        .arg(command)
+                        .arg(aggregate->plainSignature()));
+        }
     } else {
         generateExtractionMark(aggregate, DetailedDescriptionMark);
         out() << "<div class=\"descr\">\n" // QTBUG-9504
@@ -1774,8 +1778,8 @@ void HtmlGenerator::generateNavigationBar(const QString &title, const Node *node
                           << Atom(Atom::FormattingRight, ATOM_FORMATTING_LINK) << Atom(itemRight)
                           << Atom(itemLeft) << Atom(Atom::String, title) << Atom(itemRight);
     } else {
-        if (node->isAggregate()) {
-            QStringList groups = static_cast<const Aggregate *>(node)->groupNames();
+        if (node->isPageNode()) {
+            QStringList groups = static_cast<const PageNode *>(node)->groupNames();
             if (groups.length() == 1) {
                 const Node *groupNode =
                         qdb_->findNodeByNameAndType(QStringList(groups[0]), &Node::isGroup);
@@ -2290,8 +2294,8 @@ void HtmlGenerator::generateTableOfContents(const Node *node, CodeMarker *marker
             }
         }
     } else if (sections
-               && (node->isClassNode() || node->isNamespace() || node->isQmlType()
-                   || node->isJsType())) {
+               && (node->isClassNode() || node->isNamespace() || node->isQmlType() ||
+                   node->isJsType() || node->isQmlBasicType() || node->isJsBasicType())) {
         for (const auto &section : qAsConst(*sections)) {
             if (!section.members().isEmpty()) {
                 out() << "<li class=\"level" << sectionNumber << "\"><a href=\"#"
@@ -3981,7 +3985,7 @@ void HtmlGenerator::generateManifestFile(const QString &manifest, const QString
         // Include tags added via \meta {tag} {tag1[,tag2,...]}
         // within \example topic
         for (const auto &tag : en->doc().metaTagMap().values("tag")) {
-            const auto &tagList = tag.toLower().split(QLatin1Char(','));
+            const auto &tagList = tag.toLower().split(QLatin1Char(','), Qt::SkipEmptyParts);
             tags += QSet<QString>(tagList.cbegin(), tagList.cend());
         }
 
diff --git a/src/qdoc/jscodemarker.cpp b/src/qdoc/jscodemarker.cpp
index b3c675d5b..0e1eb2267 100644
--- a/src/qdoc/jscodemarker.cpp
+++ b/src/qdoc/jscodemarker.cpp
@@ -78,16 +78,16 @@ bool JsCodeMarker::recognizeCode(const QString &code)
  */
 bool JsCodeMarker::recognizeExtension(const QString &ext)
 {
-    return ext == "js" || ext == "json";
+    return ext == "js";
 }
 
 /*!
-  Returns \c true if the \a language is recognized. We recognize JavaScript,
-  ECMAScript and JSON.
+  Returns \c true if the \a language is recognized. We recognize JavaScript and
+  ECMAScript.
  */
 bool JsCodeMarker::recognizeLanguage(const QString &language)
 {
-    return language == "JavaScript" || language == "ECMAScript" || language == "JSON";
+    return language == "JavaScript" || language == "ECMAScript";
 }
 
 /*!
diff --git a/src/qdoc/location.cpp b/src/qdoc/location.cpp
index a63b1780e..ea2257980 100644
--- a/src/qdoc/location.cpp
+++ b/src/qdoc/location.cpp
@@ -325,7 +325,8 @@ void Location::initialize()
     tabSize = config.getInt(CONFIG_TABSIZE);
     programName = config.programName();
     project = config.getString(CONFIG_PROJECT);
-    warningCount = 0;
+    if (!config.singleExec())
+        warningCount = 0;
     if (qEnvironmentVariableIsSet("QDOC_ENABLE_WARNINGLIMIT")
         || config.getBool(CONFIG_WARNINGLIMIT + Config::dot + "enabled"))
         warningLimit = config.getInt(CONFIG_WARNINGLIMIT);
diff --git a/src/qdoc/node.cpp b/src/qdoc/node.cpp
index 82306eeed..29985a8bc 100644
--- a/src/qdoc/node.cpp
+++ b/src/qdoc/node.cpp
@@ -2749,6 +2749,8 @@ void Aggregate::findAllAttributions(NodeMultiMap &attributions)
 void Aggregate::findAllSince()
 {
     for (auto *node : qAsConst(children_)) {
+        if (node->isRelatedNonmember() && node->parent() != this)
+            continue;
         QString sinceString = node->since();
         // Insert a new entry into each map for each new since string found.
         if (!node->isPrivate() && !sinceString.isEmpty()) {
diff --git a/src/qdoc/webxmlgenerator.cpp b/src/qdoc/webxmlgenerator.cpp
index 4d8906f6a..59e83b1b0 100644
--- a/src/qdoc/webxmlgenerator.cpp
+++ b/src/qdoc/webxmlgenerator.cpp
@@ -748,7 +748,7 @@ void WebXMLGenerator::startLink(QXmlStreamWriter &writer, const Atom *atom, cons
         fullName = node->fullName();
     if (!fullName.isEmpty() && !link.isEmpty()) {
         writer.writeStartElement("link");
-        if (!atom->string().isEmpty())
+        if (atom && !atom->string().isEmpty())
             writer.writeAttribute("raw", atom->string());
         else
             writer.writeAttribute("raw", fullName);
diff --git a/src/qtpaths/qtpaths.cpp b/src/qtpaths/qtpaths.cpp
index 340a2ac43..9a9c90577 100644
--- a/src/qtpaths/qtpaths.cpp
+++ b/src/qtpaths/qtpaths.cpp
@@ -79,30 +79,44 @@ Q_NORETURN static void error(const QString &message)
     ::exit(EXIT_FAILURE);
 }
 
-
-/*
- * NOTE: that DataLocation and CacheLocation are missing as
- * they don't really make sense for a utility like this because
- * they include the application name.
- */
-static const struct StringEnum {
+class StringEnum {
+public:
     const char *stringvalue;
     QStandardPaths::StandardLocation enumvalue;
-} lookupTableData[] = {
-    { "ApplicationsLocation", QStandardPaths::ApplicationsLocation },
-    { "DesktopLocation", QStandardPaths::DesktopLocation },
-    { "DocumentsLocation", QStandardPaths::DocumentsLocation },
-    { "FontsLocation", QStandardPaths::FontsLocation },
-    { "MusicLocation", QStandardPaths::MusicLocation },
-    { "MoviesLocation", QStandardPaths::MoviesLocation },
-    { "PicturesLocation", QStandardPaths::PicturesLocation },
-    { "HomeLocation", QStandardPaths::HomeLocation },
-    { "GenericCacheLocation", QStandardPaths::GenericCacheLocation },
-    { "GenericDataLocation", QStandardPaths::GenericDataLocation },
-    { "RuntimeLocation", QStandardPaths::RuntimeLocation },
-    { "ConfigLocation", QStandardPaths::ConfigLocation },
-    { "GenericConfigLocation", QStandardPaths::GenericConfigLocation },
-    { "DownloadLocation", QStandardPaths::DownloadLocation }
+    bool hasappname;
+
+    /**
+    * Replace application name by generic name if requested
+    */
+    QString mapName(const QString &s) const
+    {
+        return hasappname ? QString(s).replace("qtpaths", "<APPNAME>") : s;
+    }
+};
+
+static const StringEnum lookupTableData[] = {
+    { "AppConfigLocation", QStandardPaths::AppConfigLocation, true },
+    { "AppDataLocation", QStandardPaths::AppDataLocation, true },
+    { "AppLocalDataLocation", QStandardPaths::AppLocalDataLocation, true },
+    { "ApplicationsLocation", QStandardPaths::ApplicationsLocation, false },
+    { "CacheLocation", QStandardPaths::CacheLocation, true },
+    { "ConfigLocation", QStandardPaths::ConfigLocation, false },
+#if QT_VERSION < QT_VERSION_CHECK(6,0,0)
+    { "DataLocation", QStandardPaths::DataLocation, true },
+#endif
+    { "DesktopLocation", QStandardPaths::DesktopLocation, false },
+    { "DocumentsLocation", QStandardPaths::DocumentsLocation, false },
+    { "DownloadLocation", QStandardPaths::DownloadLocation, false },
+    { "FontsLocation", QStandardPaths::FontsLocation, false },
+    { "GenericCacheLocation", QStandardPaths::GenericCacheLocation, false },
+    { "GenericConfigLocation", QStandardPaths::GenericConfigLocation, false },
+    { "GenericDataLocation", QStandardPaths::GenericDataLocation, false },
+    { "HomeLocation", QStandardPaths::HomeLocation, false },
+    { "MoviesLocation", QStandardPaths::MoviesLocation, false },
+    { "MusicLocation", QStandardPaths::MusicLocation, false },
+    { "PicturesLocation", QStandardPaths::PicturesLocation, false },
+    { "RuntimeLocation", QStandardPaths::RuntimeLocation, false },
+    { "TempLocation", QStandardPaths::TempLocation, false }
 };
 
 /**
@@ -118,14 +132,14 @@ static QStringList types()
 }
 
 /**
- * Tries to parse the location string into a StandardLocation or alternatively
+ * Tries to arse the location string into a reference to a StringEnum entry or alternatively
  * calls \ref error with a error message
  */
-static QStandardPaths::StandardLocation parseLocationOrError(const QString &locationString)
+static const StringEnum &parseLocationOrError(const QString &locationString)
 {
     for (const StringEnum &se : lookupTableData)
         if (locationString == QLatin1String(se.stringvalue))
-            return se.enumvalue;
+            return se;
 
     QString message = QCoreApplication::translate("qtpaths", "Unknown location: %1");
     error(message.arg(locationString));
@@ -246,21 +260,21 @@ int main(int argc, char **argv)
     }
 
     if (parser.isSet(display)) {
-        QStandardPaths::StandardLocation location = parseLocationOrError(parser.value(display));
-        QString text = QStandardPaths::displayName(location);
-        results << text;
+        const StringEnum &location = parseLocationOrError(parser.value(display));
+        QString text = QStandardPaths::displayName(location.enumvalue);
+        results << location.mapName(text);
     }
 
     if (parser.isSet(paths)) {
-        QStandardPaths::StandardLocation location = parseLocationOrError(parser.value(paths));
-        QStringList paths = QStandardPaths::standardLocations(location);
-        results << paths.join(pathsep);
+        const StringEnum &location = parseLocationOrError(parser.value(paths));
+        QStringList paths = QStandardPaths::standardLocations(location.enumvalue);
+        results << location.mapName(paths.join(pathsep));
     }
 
     if (parser.isSet(writablePath)) {
-        QStandardPaths::StandardLocation location = parseLocationOrError(parser.value(writablePath));
-        QString path = QStandardPaths::writableLocation(location);
-        results << path;
+        const StringEnum &location = parseLocationOrError(parser.value(writablePath));
+        QString path = QStandardPaths::writableLocation(location.enumvalue);
+        results << location.mapName(path);
     }
 
     if (parser.isSet(findExe)) {
@@ -270,31 +284,31 @@ int main(int argc, char **argv)
     }
 
     if (parser.isSet(locateDir)) {
-        QStandardPaths::StandardLocation location = parseLocationOrError(parser.value(locateDir));
+        const StringEnum &location = parseLocationOrError(parser.value(locateDir));
         QString searchitem = searchStringOrError(&parser);
-        QString path = QStandardPaths::locate(location, searchitem, QStandardPaths::LocateDirectory);
-        results << path;
+        QString path = QStandardPaths::locate(location.enumvalue, searchitem, QStandardPaths::LocateDirectory);
+        results << location.mapName(path);
     }
 
     if (parser.isSet(locateFile)) {
-        QStandardPaths::StandardLocation location = parseLocationOrError(parser.value(locateFile));
+        const StringEnum &location = parseLocationOrError(parser.value(locateFile));
         QString searchitem = searchStringOrError(&parser);
-        QString path = QStandardPaths::locate(location, searchitem, QStandardPaths::LocateFile);
-        results << path;
+        QString path = QStandardPaths::locate(location.enumvalue, searchitem, QStandardPaths::LocateFile);
+        results << location.mapName(path);
     }
 
     if (parser.isSet(locateDirs)) {
-        QStandardPaths::StandardLocation location = parseLocationOrError(parser.value(locateDirs));
+        const StringEnum &location = parseLocationOrError(parser.value(locateDirs));
         QString searchitem = searchStringOrError(&parser);
-        QStringList paths = QStandardPaths::locateAll(location, searchitem, QStandardPaths::LocateDirectory);
-        results << paths.join(pathsep);
+        QStringList paths = QStandardPaths::locateAll(location.enumvalue, searchitem, QStandardPaths::LocateDirectory);
+        results << location.mapName(paths.join(pathsep));
     }
 
     if (parser.isSet(locateFiles)) {
-        QStandardPaths::StandardLocation location = parseLocationOrError(parser.value(locateFiles));
+        const StringEnum &location = parseLocationOrError(parser.value(locateFiles));
         QString searchitem = searchStringOrError(&parser);
-        QStringList paths = QStandardPaths::locateAll(location, searchitem, QStandardPaths::LocateFile);
-        results << paths.join(pathsep);
+        QStringList paths = QStandardPaths::locateAll(location.enumvalue, searchitem, QStandardPaths::LocateFile);
+        results << location.mapName(paths.join(pathsep));
     }
     if (results.isEmpty()) {
         parser.showHelp();
diff --git a/tests/auto/qdoc/generatedoutput/expected_output/dontdocument/dontdocument.qhp b/tests/auto/qdoc/generatedoutput/expected_output/dontdocument/dontdocument.qhp
new file mode 100644
index 000000000..098200a95
--- /dev/null
+++ b/tests/auto/qdoc/generatedoutput/expected_output/dontdocument/dontdocument.qhp
@@ -0,0 +1,55 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<QtHelpProject version="1.0">
+    <namespace>org.qt-project.dontdocument.001</namespace>
+    <virtualFolder>test</virtualFolder>
+    <metaData name="version" value=""/>
+    <filterSection>
+        <toc>
+            <section ref="testcpp-module.html" title="QDoc Test C++ Classes">
+                <section ref="testcpp-module.html" title="Classes">
+                    <section ref="seenclass.html" title="SeenClass Class Reference"/>
+                    <section ref="testqdoc-test.html" title="TestQDoc::Test Class Reference">
+                        <section ref="testqdoc-test-members.html" title="List of all members"/>
+                        <section ref="testqdoc-test-obsolete.html" title="Obsolete members"/>
+                    </section>
+                    <section ref="testqdoc-testderived.html" title="TestQDoc::TestDerived Class Reference">
+                        <section ref="testqdoc-testderived-members.html" title="List of all members"/>
+                    </section>
+                </section>
+            </section>
+        </toc>
+        <keywords>
+            <keyword name="Classes" id="Classes" ref="classes.html"/>
+            <keyword name="QDOCTEST_MACRO" id="QDOCTEST_MACRO" ref="testqdoc.html#QDOCTEST_MACRO"/>
+            <keyword name="QDOCTEST_MACRO2" id="QDOCTEST_MACRO2" ref="testqdoc-test.html#QDOCTEST_MACRO2"/>
+            <keyword name="QDoc Test C++ Classes" id="QDoc Test C++ Classes" ref="testcpp-module.html"/>
+            <keyword name="SeenClass" id="SeenClass" ref="seenclass.html"/>
+            <keyword name="Test" id="TestQDoc::Test" ref="testqdoc-test.html"/>
+            <keyword name="Test::SomeType" id="Test::SomeType" ref="testqdoc-test.html#SomeType-typedef"/>
+            <keyword name="TestDerived" id="TestQDoc::TestDerived" ref="testqdoc-testderived.html"/>
+            <keyword name="TestDerived::DerivedType" id="TestDerived::DerivedType" ref="testqdoc-testderived.html#DerivedType-alias"/>
+            <keyword name="TestDerived::NotTypedef" id="TestDerived::NotTypedef" ref="testqdoc-testderived.html#NotTypedef-alias"/>
+            <keyword name="TestQDoc" id="TestQDoc" ref="testqdoc.html"/>
+            <keyword name="anotherObsoleteMember" id="Test::anotherObsoleteMember" ref="testqdoc-test-obsolete.html#anotherObsoleteMember"/>
+            <keyword name="deprecatedMember" id="Test::deprecatedMember" ref="testqdoc-test-obsolete.html#deprecatedMember"/>
+            <keyword name="inlineFunction" id="Test::inlineFunction" ref="testqdoc-test.html#inlineFunction"/>
+            <keyword name="obsoleteMember" id="Test::obsoleteMember" ref="testqdoc-test-obsolete.html#obsoleteMember"/>
+            <keyword name="overload" id="Test::overload" ref="testqdoc-test.html#overload"/>
+            <keyword name="someFunction" id="Test::someFunction" ref="testqdoc-test.html#someFunction"/>
+            <keyword name="someFunctionDefaultArg" id="Test::someFunctionDefaultArg" ref="testqdoc-test.html#someFunctionDefaultArg"/>
+            <keyword name="virtualFun" id="Test::virtualFun" ref="testqdoc-test.html#virtualFun"/>
+            <keyword name="virtualFun" id="TestDerived::virtualFun" ref="testqdoc-testderived.html#virtualFun"/>
+        </keywords>
+        <files>
+            <file>classes.html</file>
+            <file>seenclass.html</file>
+            <file>testcpp-module.html</file>
+            <file>testqdoc-test-members.html</file>
+            <file>testqdoc-test-obsolete.html</file>
+            <file>testqdoc-test.html</file>
+            <file>testqdoc-testderived-members.html</file>
+            <file>testqdoc-testderived.html</file>
+            <file>testqdoc.html</file>
+        </files>
+    </filterSection>
+</QtHelpProject>
diff --git a/tests/auto/qdoc/generatedoutput/expected_output/headerfile-docbook/testheader.xml b/tests/auto/qdoc/generatedoutput/expected_output/headerfile-docbook/testheader.xml
index f3461fb1a..afa0b20a3 100644
--- a/tests/auto/qdoc/generatedoutput/expected_output/headerfile-docbook/testheader.xml
+++ b/tests/auto/qdoc/generatedoutput/expected_output/headerfile-docbook/testheader.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
 <db:info>
-<db:title></db:title>
+<db:title>&lt;TestHeader&gt; - Test Header</db:title>
 <db:productname>HeaderFile</db:productname>
 <db:titleabbrev>HeaderFile Reference Documentation</db:titleabbrev>
 <db:abstract>
@@ -19,4 +19,72 @@
 <db:section xml:id="details">
 <db:title>Detailed Description</db:title>
 </db:section>
+<db:section xml:id="type-documentation">
+<db:title>Type Documentation</db:title>
+<db:section xml:id="Globals-enum">
+<db:title>enum Globals</db:title>
+<db:enumsynopsis>
+<db:enumname>Globals</db:enumname>
+<db:synopsisinfo db:role="access">public</db:synopsisinfo>
+<db:synopsisinfo db:role="status">active</db:synopsisinfo>
+<db:synopsisinfo db:role="threadsafeness">unspecified</db:synopsisinfo>
+<db:synopsisinfo db:role="module">HeaderFile</db:synopsisinfo>
+<db:enumitem db:enumidentifier="Glo" db:enumvalue="0"/>
+<db:enumitem db:enumidentifier="Bal" db:enumvalue="1"/>
+</db:enumsynopsis>
+<db:informaltable>
+<db:thead>
+<db:tr>
+<db:th>Constant</db:th>
+<db:th>Description</db:th>
+</db:tr>
+</db:thead>
+<db:tr>
+<db:td>
+<db:para><db:code>Glo</db:code></db:para>
+</db:td>
+<db:td><db:code>0</db:code></db:td>
+</db:tr>
+<db:tr>
+<db:td>
+<db:para><db:code>Bal</db:code></db:para>
+</db:td>
+<db:td><db:code>1</db:code></db:td>
+</db:tr>
+</db:informaltable>
+</db:section>
+</db:section>
+<db:section xml:id="variable-documentation">
+<db:title>Variable Documentation</db:title>
+<db:section xml:id="globalVar-var">
+<db:title>const int globalVar</db:title>
+<db:fieldsynopsis>
+<db:type>const int</db:type>
+<db:varname>globalVar</db:varname>
+<db:synopsisinfo db:role="access">public</db:synopsisinfo>
+<db:synopsisinfo db:role="status">active</db:synopsisinfo>
+<db:synopsisinfo db:role="threadsafeness">unspecified</db:synopsisinfo>
+<db:synopsisinfo db:role="module">HeaderFile</db:synopsisinfo>
+</db:fieldsynopsis>
+<db:para>Global variable.</db:para>
+</db:section>
+</db:section>
+<db:section xml:id="function-documentation">
+<db:title>Function Documentation</db:title>
+<db:section xml:id="globalFunc">
+<db:title>void globalFunc()</db:title>
+<db:methodsynopsis>
+<db:void/>
+<db:methodname>globalFunc</db:methodname>
+<db:void/>
+<db:synopsisinfo db:role="meta">plain</db:synopsisinfo>
+<db:synopsisinfo db:role="signature">void globalFunc()</db:synopsisinfo>
+<db:synopsisinfo db:role="access">public</db:synopsisinfo>
+<db:synopsisinfo db:role="status">active</db:synopsisinfo>
+<db:synopsisinfo db:role="threadsafeness">unspecified</db:synopsisinfo>
+<db:synopsisinfo db:role="module">HeaderFile</db:synopsisinfo>
+</db:methodsynopsis>
+<db:para>Global function.</db:para>
+</db:section>
+</db:section>
 </db:article>
diff --git a/tests/auto/qdoc/generatedoutput/expected_output/qml-int.html b/tests/auto/qdoc/generatedoutput/expected_output/qml-int.html
index 0b21da628..16603af4b 100644
--- a/tests/auto/qdoc/generatedoutput/expected_output/qml-int.html
+++ b/tests/auto/qdoc/generatedoutput/expected_output/qml-int.html
@@ -10,6 +10,8 @@
 <div class="toc">
 <h3><a name="toc">Contents</a></h3>
 <ul>
+<li class="level1"><a href="#methods">Methods</a></li>
+<li class="level1"><a href="#details">Detailed Description</a></li>
 </ul>
 </div>
 <div class="sidebar-content" id="sidebar-content"></div></div>
diff --git a/tests/auto/qdoc/generatedoutput/testdata/dontdocument/dontdocument.qdocconf b/tests/auto/qdoc/generatedoutput/testdata/dontdocument/dontdocument.qdocconf
index 117920e56..ef45f50a6 100644
--- a/tests/auto/qdoc/generatedoutput/testdata/dontdocument/dontdocument.qdocconf
+++ b/tests/auto/qdoc/generatedoutput/testdata/dontdocument/dontdocument.qdocconf
@@ -3,5 +3,19 @@ include(../configs/testcpp.qdocconf)
 headers += dont.h
 sources += dont.cpp test.qdoc
 
+qhp.projects                    = DontDocument
+
+qhp.DontDocument.file           = dontdocument.qhp
+qhp.DontDocument.namespace      = org.qt-project.dontdocument.001
+qhp.DontDocument.virtualFolder  = test
+qhp.DontDocument.indexTitle     = QDoc Test C++ Classes
+qhp.DontDocument.indexRoot      =
+
+qhp.DontDocument.subprojects                        = classes
+qhp.DontDocument.subprojects.classes.title          = Classes
+qhp.DontDocument.subprojects.classes.indexTitle     = QDoc Test C++ Classes
+qhp.DontDocument.subprojects.classes.selectors      = class
+qhp.DontDocument.subprojects.classes.sortPages      = true
+
 HTML.nosubdirs = true
 HTML.outputsubdir = dontdocument
diff --git a/tests/auto/qdoc/generatedoutput/tst_generatedoutput.cpp b/tests/auto/qdoc/generatedoutput/tst_generatedoutput.cpp
index fd68159a2..a83ba337f 100644
--- a/tests/auto/qdoc/generatedoutput/tst_generatedoutput.cpp
+++ b/tests/auto/qdoc/generatedoutput/tst_generatedoutput.cpp
@@ -349,7 +349,8 @@ void tst_generatedOutput::dontDocument()
 {
     testAndCompare("testdata/dontdocument/dontdocument.qdocconf",
                    "dontdocument/classes.html "
-                   "dontdocument/seenclass.html");
+                   "dontdocument/seenclass.html "
+                   "dontdocument/dontdocument.qhp");
 }
 
 void tst_generatedOutput::inheritedQmlPropertyGroups()
